Index: .idea/shelf/Uncommitted_changes_before_Update_at_22_08_2022_10_13_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_22_08_2022_10_13_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_22_08_2022_10_13_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_22_08_2022_10_13_[Changes]/shelved.patch	(revision 1bc4f53eff09c15c3cbf72aa96b03f758ca60a9f)
+++ /dev/null	(revision 1bc4f53eff09c15c3cbf72aa96b03f758ca60a9f)
@@ -1,37 +0,0 @@
-Index: .idea/compiler.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"1.8\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/compiler.xml b/.idea/compiler.xml
---- a/.idea/compiler.xml	(revision f083ef47031cdead1de3692081c0b9b17c5a0b59)
-+++ b/.idea/compiler.xml	(date 1661137860166)
-@@ -1,6 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-   <component name="CompilerConfiguration">
--    <bytecodeTargetLevel target="1.8" />
-+    <bytecodeTargetLevel target="11" />
-   </component>
- </project>
-\ No newline at end of file
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\" />\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision f083ef47031cdead1de3692081c0b9b17c5a0b59)
-+++ b/.idea/misc.xml	(date 1661137860153)
-@@ -1,5 +1,5 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-   <component name="ExternalStorageConfigurationManager" enabled="true" />
--  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK" />
-+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="1.8" project-jdk-type="JavaSDK" />
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_22_08_2022_10_13__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_22_08_2022_10_13__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_22_08_2022_10_13__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_22_08_2022_10_13__Changes_.xml	(revision 1bc4f53eff09c15c3cbf72aa96b03f758ca60a9f)
+++ /dev/null	(revision 1bc4f53eff09c15c3cbf72aa96b03f758ca60a9f)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_22_08_2022_10_13_[Changes]" date="1661138001705" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_08_2022_10_13_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 22/08/2022 10:13 [Changes]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/java/com/dev/notespace/screen/RegisterScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dev.notespace.screen\r\n\r\nimport android.app.Activity\r\nimport androidx.compose.animation.AnimatedVisibility\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material.Button\r\nimport androidx.compose.material.CircularProgressIndicator\r\nimport androidx.compose.material.Text\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.hilt.navigation.compose.hiltViewModel\r\nimport com.dev.core.model.presenter.User\r\nimport com.dev.notespace.R\r\nimport com.dev.notespace.component.*\r\nimport com.dev.notespace.viewModel.LoginViewModel\r\nimport com.dev.notespace.viewModel.RegisterViewModel\r\nimport com.google.android.gms.tasks.Task\r\nimport com.google.firebase.FirebaseException\r\nimport com.google.firebase.auth.AuthResult\r\nimport com.google.firebase.auth.PhoneAuthCredential\r\nimport com.google.firebase.auth.PhoneAuthProvider\r\nimport timber.log.Timber\r\n\r\n@Composable\r\nfun RegisterScreen(\r\n    modifier: Modifier = Modifier,\r\n    viewModel: RegisterViewModel = hiltViewModel(),\r\n    navigateToOtp: (String, String, User) -> Unit,\r\n) {\r\n    val (identifier, setIdentifier) = remember {\r\n        mutableStateOf(\"\")\r\n    }\r\n    val (identifierError, showIdentifierError) = remember {\r\n        mutableStateOf(false)\r\n    }\r\n    val (identifierErrorDescription, setIdentifierError) = remember {\r\n        mutableStateOf(\"\")\r\n    }\r\n    val (name, setName) = remember {\r\n        mutableStateOf(\"\")\r\n    }\r\n    val (nameError, showNameError) = remember {\r\n        mutableStateOf(false)\r\n    }\r\n    val (nameErrorDescription, setNameError) = remember {\r\n        mutableStateOf(\"\")\r\n    }\r\n    val (education, setEducation) = remember {\r\n        mutableStateOf(\"\")\r\n    }\r\n    val (educationError, showEducationError) = remember {\r\n        mutableStateOf(false)\r\n    }\r\n    val (educationErrorDescription, setEducationError) = remember {\r\n        mutableStateOf(\"\")\r\n    }\r\n    val (major, setMajor) = remember {\r\n        mutableStateOf(\"\")\r\n    }\r\n    val (majorError, showMajorError) = remember {\r\n        mutableStateOf(false)\r\n    }\r\n    val (majorErrorDescription, setMajorError) = remember {\r\n        mutableStateOf(\"\")\r\n    }\r\n    val (loading, showLoading) = remember {\r\n        mutableStateOf(false)\r\n    }\r\n    val (dialog, showDialog) = remember {\r\n        mutableStateOf(false)\r\n    }\r\n    val (message, setMessage) = remember {\r\n        mutableStateOf(\"\")\r\n    }\r\n\r\n    val callbacks = object : PhoneAuthProvider.OnVerificationStateChangedCallbacks(){\r\n        override fun onVerificationCompleted(p0: PhoneAuthCredential) {\r\n\r\n        }\r\n        override fun onVerificationFailed(p0: FirebaseException) {\r\n            Timber.e(p0.message.toString())\r\n            showLoading(false)\r\n            setMessage(p0.message.toString())\r\n            showDialog(true)\r\n        }\r\n        override fun onCodeSent(p0: String, p1: PhoneAuthProvider.ForceResendingToken) {\r\n            super.onCodeSent(p0, p1)\r\n            showLoading(false)\r\n            navigateToOtp(identifier, p0, User(name, identifier, education, major))\r\n        }\r\n    }\r\n    val activity = LocalContext.current as Activity\r\n\r\n    RegisterContent(\r\n        modifier = modifier,\r\n        sendVerificationCode = {\r\n            viewModel.sendVerificationCode(\r\n                activity, \"+62$identifier\", callbacks\r\n            )\r\n        },\r\n        identifier = identifier,\r\n        setIdentifier = setIdentifier,\r\n        identifierError = identifierError,\r\n        showIdentifierError = showIdentifierError,\r\n        identifierErrorDescription = identifierErrorDescription,\r\n        setIdentifierError = setIdentifierError,\r\n        name = name,\r\n        setName = setName,\r\n        nameError = nameError,\r\n        showNameError = showNameError,\r\n        nameErrorDescription = nameErrorDescription,\r\n        setNameError = setNameError,\r\n        education = education,\r\n        setEducation = setEducation,\r\n        educationError = educationError,\r\n        showEducationError = showEducationError,\r\n        educationErrorDescription = educationErrorDescription,\r\n        setEducationError = setEducationError,\r\n        major = major,\r\n        setMajor = setMajor,\r\n        majorError = majorError,\r\n        showMajorError = showMajorError,\r\n        majorErrorDescription = majorErrorDescription,\r\n        setMajorError = setMajorError,\r\n        checkPhoneNumber = { viewModel.checkPhoneNumber(identifier) },\r\n        showDialog = showDialog,\r\n        setMessage = setMessage,\r\n        showLoading = showLoading\r\n    )\r\n\r\n    if(loading) {\r\n        Box(\r\n            modifier = Modifier.fillMaxSize()\r\n        ) {\r\n            CircularProgressIndicator(\r\n                modifier = Modifier.align(Alignment.Center)\r\n            )\r\n        }\r\n    }\r\n\r\n    if(dialog) {\r\n        CommonDialog(\r\n            message = message,\r\n            onDismiss = { showDialog(false) }\r\n        )\r\n    }\r\n\r\n}\r\n\r\n@Composable\r\nprivate fun RegisterContent(\r\n    modifier: Modifier = Modifier,\r\n    sendVerificationCode: () -> Unit,\r\n    identifier: String,\r\n    setIdentifier: (String) -> Unit,\r\n    identifierError: Boolean,\r\n    showIdentifierError: (Boolean) -> Unit,\r\n    identifierErrorDescription: String,\r\n    setIdentifierError: (String) -> Unit,\r\n    name: String,\r\n    setName: (String) -> Unit,\r\n    nameError: Boolean,\r\n    showNameError: (Boolean) -> Unit,\r\n    nameErrorDescription: String,\r\n    setNameError: (String) -> Unit,\r\n    education: String,\r\n    setEducation: (String) -> Unit,\r\n    educationError: Boolean,\r\n    showEducationError: (Boolean) -> Unit,\r\n    educationErrorDescription: String,\r\n    setEducationError: (String) -> Unit,\r\n    major: String,\r\n    setMajor: (String) -> Unit,\r\n    majorError: Boolean,\r\n    showMajorError: (Boolean) -> Unit,\r\n    majorErrorDescription: String,\r\n    setMajorError: (String) -> Unit,\r\n    checkPhoneNumber: () -> Boolean,\r\n    showDialog: (Boolean) -> Unit,\r\n    setMessage: (String) -> Unit,\r\n    showLoading: (Boolean) -> Unit\r\n) {\r\n    Column(\r\n        modifier = modifier\r\n            .fillMaxSize()\r\n            .padding(16.dp),\r\n        horizontalAlignment = Alignment.CenterHorizontally\r\n    ) {\r\n        DataInput(\r\n            modifier = Modifier.padding(top = 16.dp),\r\n            label = \"Name\",\r\n            currentText = name,\r\n            onTextChange = setName,\r\n            error = nameError,\r\n            errorDescription = nameErrorDescription,\r\n            showError = showNameError\r\n        )\r\n        EducationDropDown(\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(horizontal = 16.dp)\r\n                .padding(top = 16.dp),\r\n            education = education,\r\n            onItemClicked = setEducation,\r\n            error = educationError,\r\n            errorDescription = educationErrorDescription,\r\n            showError = showEducationError\r\n        )\r\n        DataInput(\r\n            modifier = Modifier.padding(top = 16.dp),\r\n            label = \"Major\",\r\n            currentText = major,\r\n            onTextChange = setMajor,\r\n            error = majorError,\r\n            errorDescription = majorErrorDescription,\r\n            showError = showMajorError\r\n        )\r\n        DigitDataInput(\r\n            modifier = Modifier.padding(top = 16.dp),\r\n            label = \"Mobile No\",\r\n            currentText = identifier,\r\n            onTextChange = setIdentifier,\r\n            error = identifierError,\r\n            errorDescription = identifierErrorDescription,\r\n            showError = showIdentifierError\r\n        )\r\n        Button(\r\n            onClick = {\r\n                onButtonRegisterClick(\r\n                    registerWithNumber = sendVerificationCode,\r\n                    identifier = identifier,\r\n                    setIdentifierDescription = setIdentifierError,\r\n                    showIdentifierError = showIdentifierError,\r\n                    name = name,\r\n                    setNameDescription = setNameError,\r\n                    showNameError = showNameError,\r\n                    education = education,\r\n                    setEducationDescription = setEducationError,\r\n                    showEducationError = showEducationError,\r\n                    major = major,\r\n                    setMajorDescription = setMajorError,\r\n                    showMajorError = showMajorError,\r\n                    checkPhoneNumber = checkPhoneNumber,\r\n                    showDialog = showDialog,\r\n                    setMessage = setMessage,\r\n                    showLoading = showLoading\r\n                )\r\n            },\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(top = 32.dp)\r\n                .padding(horizontal = 32.dp)\r\n        ) {\r\n            Text(text = \"Register with Mobile\")\r\n        }\r\n    }\r\n}\r\n\r\nprivate fun onButtonRegisterClick(\r\n    registerWithNumber: () -> Unit,\r\n    identifier: String,\r\n    setIdentifierDescription: (String) -> Unit,\r\n    showIdentifierError: (Boolean) -> Unit,\r\n    name: String,\r\n    setNameDescription: (String) -> Unit,\r\n    showNameError: (Boolean) -> Unit,\r\n    education: String,\r\n    setEducationDescription: (String) -> Unit,\r\n    showEducationError: (Boolean) -> Unit,\r\n    major: String,\r\n    setMajorDescription: (String) -> Unit,\r\n    showMajorError: (Boolean) -> Unit,\r\n    checkPhoneNumber: () -> Boolean,\r\n    showDialog: (Boolean) -> Unit,\r\n    setMessage: (String) -> Unit,\r\n    showLoading: (Boolean) -> Unit\r\n) {\r\n    when {\r\n        name.isEmpty() -> {\r\n            setNameDescription(\"Name Field Cannot Be Empty\")\r\n            showNameError(true)\r\n        }\r\n        name.length <= 5 -> {\r\n            setNameDescription(\"Name Length Must Be Greater Than 5\")\r\n            showNameError(true)\r\n        }\r\n        education.isEmpty() -> {\r\n            setEducationDescription(\"Please select your current education\")\r\n            showEducationError(true)\r\n        }\r\n        major.isEmpty() -> {\r\n            setMajorDescription(\"Please let us know your current major\")\r\n            showMajorError(true)\r\n        }\r\n        identifier.isEmpty() -> {\r\n            setIdentifierDescription(\"Identifier Field Cannot Be Empty\")\r\n            showIdentifierError(true)\r\n        }\r\n        !identifier.startsWith(\"08\") -> {\r\n            setIdentifierDescription(\"Mobile no should start with 08\")\r\n            showIdentifierError(true)\r\n        }\r\n        identifier.startsWith(\"08\") && identifier.length <= 8 -> {\r\n            setIdentifierDescription(\"Mobile No Length Must Be Greater Than 8\")\r\n            showIdentifierError(true)\r\n        }\r\n        identifier.startsWith(\"08\") && identifier.length >= 13 -> {\r\n            setIdentifierDescription(\"Mobile No Length Must Be Less Than 13\")\r\n            showIdentifierError(true)\r\n        }\r\n        identifier.startsWith(\"08\") && identifier.length <= 13 && identifier.length >= 8 -> {\r\n            showLoading(true)\r\n            if(checkPhoneNumber()) {\r\n                registerWithNumber()\r\n            } else {\r\n                setIdentifierDescription(\"Mobile No is Not Registered Yet!\")\r\n                showIdentifierError(true)\r\n                showLoading(false)\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/dev/notespace/screen/RegisterScreen.kt b/app/src/main/java/com/dev/notespace/screen/RegisterScreen.kt
--- a/app/src/main/java/com/dev/notespace/screen/RegisterScreen.kt	(revision 1bc4f53eff09c15c3cbf72aa96b03f758ca60a9f)
+++ b/app/src/main/java/com/dev/notespace/screen/RegisterScreen.kt	(date 1661307946518)
@@ -101,7 +101,7 @@
         modifier = modifier,
         sendVerificationCode = {
             viewModel.sendVerificationCode(
-                activity, "+62$identifier", callbacks
+                activity, "+62${identifier.drop(1)}", callbacks
             )
         },
         identifier = identifier,
Index: app/src/main/java/com/dev/notespace/screen/LoginScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dev.notespace.screen\r\n\r\nimport android.app.Activity\r\nimport androidx.compose.animation.AnimatedVisibility\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport com.dev.notespace.R\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material.Button\r\nimport androidx.compose.material.CircularProgressIndicator\r\nimport androidx.compose.material.Text\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.hilt.navigation.compose.hiltViewModel\r\nimport com.dev.notespace.component.CommonDialog\r\nimport com.dev.notespace.component.DataInput\r\nimport com.dev.notespace.component.DigitDataInput\r\nimport com.dev.notespace.component.PasswordInput\r\nimport com.dev.notespace.viewModel.LoginViewModel\r\nimport com.google.android.gms.tasks.Task\r\nimport com.google.firebase.FirebaseException\r\nimport com.google.firebase.auth.AuthResult\r\nimport com.google.firebase.auth.PhoneAuthCredential\r\nimport com.google.firebase.auth.PhoneAuthProvider\r\nimport timber.log.Timber\r\n\r\n@Composable\r\nfun LoginScreen(\r\n    modifier: Modifier = Modifier,\r\n    viewModel: LoginViewModel = hiltViewModel(),\r\n    navigateToOtp: (String, String) -> Unit,\r\n    navigateToRegister: () -> Unit\r\n) {\r\n    val (identifier, setIdentifier) = remember {\r\n        mutableStateOf(\"\")\r\n    }\r\n    val (identifierError, showIdentifierError) = remember {\r\n        mutableStateOf(false)\r\n    }\r\n    val (identifierErrorDescription, setIdentifierError) = remember {\r\n        mutableStateOf(\"\")\r\n    }\r\n    val (loading, showLoading) = remember {\r\n        mutableStateOf(false)\r\n    }\r\n    val (dialog, showDialog) = remember {\r\n        mutableStateOf(false)\r\n    }\r\n    val (message, setMessage) = remember {\r\n        mutableStateOf(\"\")\r\n    }\r\n\r\n    val callbacks = object : PhoneAuthProvider.OnVerificationStateChangedCallbacks(){\r\n        override fun onVerificationCompleted(p0: PhoneAuthCredential) {\r\n\r\n        }\r\n        override fun onVerificationFailed(p0: FirebaseException) {\r\n            Timber.e(p0.message.toString())\r\n            showLoading(false)\r\n            setMessage(p0.message.toString())\r\n            showDialog(true)\r\n        }\r\n        override fun onCodeSent(p0: String, p1: PhoneAuthProvider.ForceResendingToken) {\r\n            super.onCodeSent(p0, p1)\r\n            showLoading(false)\r\n            navigateToOtp(identifier, p0)\r\n        }\r\n    }\r\n    val activity = LocalContext.current as Activity\r\n\r\n    LoginContent(\r\n        modifier = modifier,\r\n        sendVerificationCode = {\r\n            viewModel.sendVerificationCode(\r\n                activity, identifier, callbacks\r\n            )\r\n        },\r\n        navigateToRegister = navigateToRegister,\r\n        identifier = identifier,\r\n        setIdentifier = setIdentifier,\r\n        identifierError = identifierError,\r\n        showIdentifierError = showIdentifierError,\r\n        identifierErrorDescription = identifierErrorDescription,\r\n        setIdentifierError = setIdentifierError,\r\n        checkPhoneNumber = { viewModel.checkPhoneNumber(identifier) },\r\n        showDialog = showDialog,\r\n        setMessage = setMessage,\r\n        showLoading = showLoading\r\n    )\r\n\r\n    if(loading) {\r\n        Box(\r\n            modifier = Modifier.fillMaxSize()\r\n        ) {\r\n            CircularProgressIndicator(\r\n                modifier = Modifier.align(Alignment.Center)\r\n            )\r\n        }\r\n    }\r\n\r\n    if(dialog) {\r\n        CommonDialog(\r\n            message = message,\r\n            onDismiss = { showDialog(false) }\r\n        )\r\n    }\r\n\r\n}\r\n\r\n@Composable\r\nprivate fun LoginContent(\r\n    modifier: Modifier = Modifier,\r\n    sendVerificationCode: () -> Unit,\r\n    navigateToRegister: () -> Unit,\r\n    identifier: String,\r\n    setIdentifier: (String) -> Unit,\r\n    identifierError: Boolean,\r\n    showIdentifierError: (Boolean) -> Unit,\r\n    identifierErrorDescription: String,\r\n    setIdentifierError: (String) -> Unit,\r\n    checkPhoneNumber: () -> Boolean,\r\n    showDialog: (Boolean) -> Unit,\r\n    setMessage: (String) -> Unit,\r\n    showLoading: (Boolean) -> Unit\r\n) {\r\n    Column(\r\n        modifier = modifier\r\n            .fillMaxSize()\r\n            .padding(16.dp),\r\n        horizontalAlignment = Alignment.CenterHorizontally\r\n    ) {\r\n        Box(\r\n            modifier = Modifier\r\n                .padding(top = 48.dp)\r\n        ) {\r\n            Image(\r\n                painter = painterResource(id = R.drawable.auth_screens_background),\r\n                contentDescription = null,\r\n                modifier = Modifier.height(36.dp)\r\n            )\r\n        }\r\n        Text(\r\n            text = \"NOTE SPACE\",\r\n            modifier = Modifier.padding(top = 8.dp)\r\n        )\r\n        DigitDataInput(\r\n            modifier = Modifier.padding(top = 128.dp),\r\n            label = \"Mobile No\",\r\n            currentText = identifier,\r\n            onTextChange = setIdentifier,\r\n            error = identifierError,\r\n            errorDescription = identifierErrorDescription,\r\n            showError = showIdentifierError,\r\n            maxLength = 13\r\n        )\r\n        Button(\r\n            onClick = {\r\n                onButtonLoginClick(\r\n                    loginWithNumber = sendVerificationCode,\r\n                    identifier = identifier,\r\n                    setIdentifierDescription = setIdentifierError,\r\n                    showIdentifierError = showIdentifierError,\r\n                    checkPhoneNumber = checkPhoneNumber,\r\n                    showDialog = showDialog,\r\n                    setMessage = setMessage,\r\n                    showLoading = showLoading\r\n                )\r\n            },\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(top = 32.dp)\r\n                .padding(horizontal = 32.dp)\r\n        ) {\r\n            Text(text = \"Login\")\r\n        }\r\n        Text(\r\n            text = \"Register your Account\",\r\n            modifier = Modifier\r\n                .padding(8.dp)\r\n                .clickable {\r\n                    navigateToRegister()\r\n                }\r\n        )\r\n    }\r\n}\r\n\r\nprivate fun onButtonLoginClick(\r\n    loginWithNumber: () -> Unit,\r\n    identifier: String,\r\n    setIdentifierDescription: (String) -> Unit,\r\n    showIdentifierError: (Boolean) -> Unit,\r\n    checkPhoneNumber: () -> Boolean,\r\n    showDialog: (Boolean) -> Unit,\r\n    setMessage: (String) -> Unit,\r\n    showLoading: (Boolean) -> Unit\r\n) {\r\n    when {\r\n        identifier.isEmpty() -> {\r\n            setIdentifierDescription(\"This Field Cannot Be Empty\")\r\n            showIdentifierError(true)\r\n        }\r\n        !identifier.startsWith(\"08\") -> {\r\n            setIdentifierDescription(\"Mobile no should start with 08\")\r\n            showIdentifierError(true)\r\n        }\r\n        identifier.startsWith(\"08\") && identifier.length <= 8 -> {\r\n            setIdentifierDescription(\"Mobile No Length Must Be Greater Than 8\")\r\n            showIdentifierError(true)\r\n        }\r\n        identifier.startsWith(\"08\") && identifier.length >= 13 -> {\r\n            setIdentifierDescription(\"Mobile No Length Must Be Less Than 13\")\r\n            showIdentifierError(true)\r\n        }\r\n        identifier.startsWith(\"08\") && identifier.length <= 13 && identifier.length >= 8 -> {\r\n            showLoading(true)\r\n            if(checkPhoneNumber()) {\r\n                setIdentifierDescription(\"Mobile No is Not Registered Yet!\")\r\n                showIdentifierError(true)\r\n                showLoading(false)\r\n            } else {\r\n                loginWithNumber()\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/dev/notespace/screen/LoginScreen.kt b/app/src/main/java/com/dev/notespace/screen/LoginScreen.kt
--- a/app/src/main/java/com/dev/notespace/screen/LoginScreen.kt	(revision 1bc4f53eff09c15c3cbf72aa96b03f758ca60a9f)
+++ b/app/src/main/java/com/dev/notespace/screen/LoginScreen.kt	(date 1661307946495)
@@ -76,7 +76,7 @@
         modifier = modifier,
         sendVerificationCode = {
             viewModel.sendVerificationCode(
-                activity, identifier, callbacks
+                activity, "+62${identifier.drop(1)}", callbacks
             )
         },
         navigateToRegister = navigateToRegister,
